import React, { useState } from 'react';
import { AppFeature } from './types';
import Header from './components/Header';
import QuestionAnswer from './components/QuestionAnswer';
import DailyDua from './components/DailyDua';
import VerseExplorer from './components/VerseExplorer';
import { AskIcon, DuaIcon, QuranIcon } from './components/common/IconComponents';

const App: React.FC = () => {
  const [activeFeature, setActiveFeature] = useState<AppFeature>(AppFeature.Ask);

  const renderFeature = () => {
    switch (activeFeature) {
      case AppFeature.Ask:
        return <QuestionAnswer />;
      case AppFeature.Dua:
        return <DailyDua />;
      case AppFeature.Quran:
        return <VerseExplorer />;
      default:
        return <QuestionAnswer />;
    }
  };

  // FIX: Replaced JSX.Element with React.ReactNode to resolve namespace error.
  const NavButton = ({ feature, label, icon }: { feature: AppFeature; label: string; icon: React.ReactNode }) => {
    const isActive = activeFeature === feature;
    return (
      <button
        onClick={() => setActiveFeature(feature)}
        className={`flex-1 flex flex-col sm:flex-row items-center justify-center gap-2 p-3 text-sm font-medium rounded-lg transition-all duration-300 transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-teal-900 focus:ring-teal-400 ${
          isActive
            ? 'bg-teal-600 text-white shadow-lg'
            : 'bg-teal-700/50 text-teal-200 hover:bg-teal-700 hover:text-white'
        }`}
      >
        {icon}
        <span>{label}</span>
      </button>
    );
  };

  return (
    <div className="min-h-screen bg-gray-50 text-gray-800">
      <Header />
      <main className="max-w-4xl mx-auto p-4 sm:p-6">
        <nav className="bg-teal-800/80 backdrop-blur-sm rounded-xl p-2 mb-6 shadow-md">
          <div className="flex items-center justify-around space-x-2">
            <NavButton feature={AppFeature.Ask} label="Ask a Question" icon={<AskIcon />} />
            <NavButton feature={AppFeature.Dua} label="Daily Dua" icon={<DuaIcon />} />
            <NavButton feature={AppFeature.Quran} label="Verse Explorer" icon={<QuranIcon />} />
          </div>
        </nav>
        <div className="transition-opacity duration-500">
          {renderFeature()}
        </div>
      </main>
      <footer className="text-center p-4 text-xs text-gray-500 mt-8">
        <p>Generated by Islamic AI Assistant. Please consult a qualified scholar for important religious matters.</p>
      </footer>
    </div>
  );
};

export default App;
